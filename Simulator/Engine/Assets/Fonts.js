const fontData = [
    `| | `,
    `|_| `,
    `(_) `,
    `    `,
    ` _ _ `,
    `( | )`,
    ` V V `,
    `  $  `,
    `     `,
    `   _ _   `,
    ` _| | |_ `,
    `|_  .  _|`,
    `|_     _|`,
    `  |_|_|  `,
    `    `,
    ` ||_`,
    `(_-<`,
    `/ _/`,
    ` || `,
    ` _  __ `,
    `(_)/ / `,
    `  / /_ `,
    ` /_/(_)`,
    `       `,
    ` __     `,
    `/ _|___ `,
    `> _|_ _|`,
    `\\_____| `,
    `        `,
    ` _ `,
    `( )`,
    `|/ `,
    ` $ `,
    `   `,
    `  __`,
    ` / /`,
    `| | `,
    `| | `,
    ` \\_\\`,
    `__  `,
    `\\ \\ `,
    ` | |`,
    ` | |`,
    `/_/ `,
    `    `,
    `_/_\\_`,
    `>   <`,
    ` \\/ `,
    `    `,
    `   _   `,
    ` _| |_ `,
    `|_   _|`,
    `  |_|  `,
    `       `,
    `   `,
    `   `,
    ` _ `,
    `( )`,
    `|/ `,
    `     `,
    ` ___ `,
    `|___|`,
    `  $  `,
    `     `,
    `   `,
    `   `,
    ` _ `,
    `(_)`,
    `   `,
    `   __`,
    `  / /`,
    ` / / `,
    `/_/  `,
    `     `,
  
    ` _ `,
    `/ |`,
    `| |`,
    `|_|`,
    `   `,
    ` ___ `,
    `|_  )`,
    ` / / `,
    `/___|`,
    `     `,
    ` ____`,
    `|__ /`,
    ` |_ \\`,
    `|___/`,
    `     `,
    ` _ _  `,
    `| | | `,
    `|_  _|`,
    `  |_| `,
    `      `,
    ` ___ `,
    `| __|`,
    `|__ \\`,
    `|___/`,
    `     `,
    `  __ `,
    ` / / `,
    `/ _ \\`,
    `\\___/`,
    `     `,
    ` ____ `,
    `|__  |`,
    `  / / `,
    ` /_/  `,
    `      `,
    ` ___ `,
    `( _ )`,
    `/ _ \\`,
    `\\___/`,
    `     `,
    ` ___ `,
    `/ _ \\`,
    `\\_, /`,
    ` /_/ `,
    `     `,
    ` _ `,
    `(_)`,
    ` _ `,
    `(_)`,
    `   `,
    ` _ `,
    `(_)`,
    ` _ `,
    `( )`,
    `|/ `,
    `  __`,
    ` / /`,
    `< < `,
    ` \\_\\`,
    `    `,
    `     `,
    ` ___ `,
    `|___|`,
    `|___|`,
    `     `,
    `__  `,
    `\\ \\ `,
    ` > >`,
    `/_/ `,
    `    `,
    ` ___ `,
    `|__ \\`,
    `  /_/`,
    ` (_) `,
    `     `,
    `  ____  `,
    ` / __ \\ `,
    `/ / _\` |`,
    `\\ \\__,_|`,
    ` \\____/ `,
    `   _   `,
    `  /_\\  `,
    ` / _ \\ `,
    `/_/ \\_\\`,
    `       `,
    ` ___ `,
    `| _ )`,
    `| _ \\`,
    `|___/`,
    `     `,
    `  ___ `,
    ` / __|`,
    `| (__ `,
    ` \\___|`,
    `      `,
    ` ___  `,
    `|   \\ `,
    `| |) |`,
    `|___/ `,
    `      `,
    ` ___ `,
    `| __|`,
    `| _| `,
    `|___|`,
    `     `,
    ` ___ `,
    `| __|`,
    `| _| `,
    `|_|  `,
    `     `,
    `  ___ `,
    ` / __|`,
    `| (_ |`,
    ` \\___|`,
    `      `,
    ` _  _ `,
    `| || |`,
    `| __ |`,
    `|_||_|`,
    `      `,
    ` ___ `,
    `|_ _|`,
    ` | | `,
    `|___|`,
    `     `,
    `    _ `,
    ` _ | |`,
    `| || |`,
    ` \\__/ `,
    `      `,
    ` _  __`,
    `| |/ /`,
    `| ' < `,
    `|_|\\_\\`,
    `      `,
    ` _    `,
    `| |   `,
    `| |__ `,
    `|____|`,
    `      `,
    ` __  __ `,
    `|  \\/  |`,
    `| |\\/| |`,
    `|_|  |_|`,
    `        `,
    ` _  _ `,
    `| \\| |`,
    `| .\` |`,
    `|_|\\_|`,
    `      `,
    `  ___  `,
    ` / _ \\ `,
    `| (_) |`,
    ` \\___/ `,
    `       `,
    ` ___ `,
    `| _ \\`,
    `|  _/`,
    `|_|  `,
    `     `,
    `  ___  `,
    ` / _ \\ `,
    `| (_) |`,
    ` \\__\\_\\`,
    `       `,
    ` ___ `,
    `| _ \\`,
    `|   /`,
    `|_|_\\`,
    `     `,
    ` ___ `,
    `/ __|`,
    `\\__ \\`,
    `|___/`,
    `     `,
    ` _____ `,
    `|_   _|`,
    `  | |  `,
    `  |_|  `,
    `       `,
    ` _   _ `,
    `| | | |`,
    `| |_| |`,
    ` \\___/ `,
    `       `,
    `__   __`,
    `\\ \\ / /`,
    ` \\ V / `,
    `  \\_/  `,
    `       `,
    `__      __`,
    `\\ \\    / /`,
    ` \\ \\/\\/ / `,
    `  \\_/\\_/  `,
    `          `,
    `__  __`,
    `\\ \\/ /`,
    ` >  < `,
    `/_/\\_\\`,
    `      `,
    `__   __`,
    `\\ \\ / /`,
    ` \\ V / `,
    `  |_|  `,
    `       `,
    ` ____`,
    `|_  /`,
    ` / / `,
    `/___|`,
    `     `,
    ` __ `,
    `| _|`,
    `| | `,
    `| | `,
    `|__|`,
    `__   `,
    `\\ \\  `,
    ` \\ \\ `,
    `  \\_\\`,
    `     `,
    ` __ `,
    `|_ |`,
    ` | |`,
    ` | |`,
    `|__|`,
    ` /\\ `,
    `|/\\|`,
    `  $ `,
    `  $ `,
    `    `,
    `     `,
    `     `,
    `     `,
    ` ___ `,
    `|___|`,
    ` _ `,
    `( )`,
    ` \\|`,
    ` $ `,
    `   `,
    `      `,
    ` __ _ `,
    `/ _\` |`,
    `\\__,_|`,
    `      `,
    ` _    `,
    `| |__ `,
    `| '_ \\`,
    `|_.__|`,
    `      `,
    `    `,
    ` __ `,
    `/ _|`,
    `\\__|`,
    `    `,
    `    _ `,
    ` __| |`,
    `/ _\` |`,
    `\\__,_|`,
    `      `,
    `     `,
    ` ___ `,
    `/ -_)`,
    `\\___|`,
    `     `,
    `  __ `,
    ` / _|`,
    `|  _|`,
    `|_|  `,
    `     `,
    `      `,
    ` __ _ `,
    `/ _\` |`,
    `\\__, |`,
    `|___/ `,
    ` _    `,
    `| |_  `,
    `| ' \\ `,
    `|_||_|`,
    `      `,
    ` _ `,
    `(_)`,
    `| |`,
    `|_|`,
    `   `,
    `   _ `,
    `  (_)`,
    `  | |`,
    ` _/ |`,
    `|__/ `,
    ` _   `,
    `| |__`,
    `| / /`,
    `|_\\_\\`,
    `     `,
    ` _ `,
    `| |`,
    `| |`,
    `|_|`,
    `   `,
    `       `,
    ` _ __  `,
    `| '  \\ `,
    `|_|_|_|`,
    `       `,
    `      `,
    ` _ _  `,
    `| ' \\ `,
    `|_||_|`,
    `      `,
    `     `,
    ` ___ `,
    `/ _ \\`,
    `\\___/`,
    `     `,
    `      `,
    ` _ __ `,
    `| '_ \\`,
    `| .__/`,
    `|_|   `,
    `      `,
    ` __ _ `,
    `/ _\` |`,
    `\\__, |`,
    `   |_|`,
    `     `,
    ` _ _ `,
    `| '_|`,
    `|_|  `,
    `     `,
    `    `,
    ` ___`,
    `(_-<`,
    `/__/`,
    `    `,
    ` _   `,
    `| |_ `,
    `|  _|`,
    ` \\__|`,
    `     `,
    `      `,
    ` _  _ `,
    `| || |`,
    ` \\_,_|`,
    `      `,
    `     `,
    `__ __`,
    `\\ V /`,
    ` \\_/ `,
    `     `,
    `        `,
    `__ __ __`,
    `\\ V  V /`,
    ` \\_/\\_/ `,
    `        `,
    `     `,
    `__ __`,
    `\\ \\ /`,
    `/_\\_\\`,
    `     `,
    `      `,
    ` _  _ `,
    `| || |`,
    ` \\_, |`,
    ` |__/ `,
    `    `,
    ` ___`,
    `|_ /`,
    `/__|`
];

const smallFiGlet = [
    /*
        0-9: 0-9
        10-35: A-Z
        36-61: a-z
        62: space
    */
    [
        `  __  `,
        ` /  \\ `,
        `| () |`,
        ` \\__/ `
    ],
    [
        ` _ `,
        `/ |`,
        `| |`,
        `|_|`
    ],
    [
        ` ___ `,
        `|_  )`,
        ` / / `,
        `/___|`
    ],
    [
        ` ____`,
        `|__ /`,
        ` |_ \\`,
        `|___/`
    ],
    [
        ` _ _  `,
        `| | | `,
        `|_  _|`,
        `  |_| `
    ],
    [
        ` ___ `,
        `| __|`,
        `|__ \\`,
        `|___/`
    ],
    [
        `  __ `,
        ` / / `,
        `/ _ \\`,
        `\\___/`
    ],
    [
        ` ____ `,
        `|__  |`,
        `  / / `,
        ` /_/  `
    ],
    [
        ` ___ `,
        `( _ )`,
        `/ _ \\`,
        `\\___/`
    ],
    [
        ` ___ `,
        `/ _ \\`,
        `\\_, /`,
        ` /_/ `
    ],
    [
        ` _ `,
        `(_)`,
        ` _ `,
        `(_)`
    ],
    [
        ` _ `,
        `(_)`,
        ` _ `,
        `( )`,
        `|/ `
    ],
    [
        `  __`,
        ` / /`,
        `< < `,
        ` \\_\\`
    ],
    [
        ` ___ `,
        `|___|`,
        `|___|`
    ],
    [
        `__  `,
        `\\ \\ `,
        ` > >`,
        `/_/ `
    ],
    [
        ` ___ `,
        `|__ \\`,
        `  /_/`,
        ` (_) `
    ],
    [
        `  ____  `,
        ` / __ \\ `,
        `/ / _\` |`,
        `\\ \\__,_|`,
        ` \\____/ `
    ],
    [
        `   _   `,
        `  /_\\  `,
        ` / _ \\ `,
        `/_/ \\_\\`
    ],
    [
        ` ___ `,
        `| _ )`,
        `| _ \\`,
        `|___/`
    ],
    [
        `  ___ `,
        ` / __|`,
        `| (__ `,
        ` \\___|`
    ],
    [
        ` ___  `,
        `|   \\ `,
        `| |) |`,
        `|___/ `
    ],
    [
        ` ___ `,
        `| __|`,
        `| _| `,
        `|___|`
    ],
    [
        ` ___ `,
        `| __|`,
        `| _| `,
        `|_|  `
    ],
    [
        `  ___ `,
        ` / __|`,
        `| (_ |`,
        ` \\___|`
    ],
    [
        ` _  _ `,
        `| || |`,
        `| __ |`,
        `|_||_|`
    ],
    [
        ` ___ `,
        `|_ _|`,
        ` | | `,
        `|___|`
    ],
    [
        `    _ `,
        ` _ | |`,
        `| || |`,
        ` \\__/ `
    ],
    [
        ` _  __`,
        `| |/ /`,
        `| ' < `,
        `|_|\\_\\`
    ],
    [
        ` _    `,
        `| |   `,
        `| |__ `,
        `|____|`
    ],
    [
        ` __  __ `,
        `|  \\/  |`,
        `| |\\/| |`,
        `|_|  |_|`
    ],
    [
        ` _  _ `,
        `| \\| |`,
        `| .\` |`,
        `|_|\\_|`
    ],
    [
        `  ___  `,
        ` / _ \\ `,
        `| (_) |`,
        ` \\___/ `
    ],
    [
        ` ___ `,
        `| _ \\`,
        `|  _/`,
        `|_|  `
    ],
    [
        `  ___  `,
        ` / _ \\ `,
        `| (_) |`,
        ` \\__\\_\\`
    ],
    [
        ` ___ `,
        `| _ \\`,
        `|   /`,
        `|_|_\\`
    ],
    [
        ` ___ `,
        `/ __|`,
        `\\__ \\`,
        `|___/`
    ],
    [
        ` _____ `,
        `|_   _|`,
        `  | |  `,
        `  |_|  `
    ],
    [
        ` _   _ `,
        `| | | |`,
        `| |_| |`,
        ` \\___/ `
    ],
    [
        `__   __`,
        `\\ \\ / /`,
        ` \\ V / `,
        `  \\_/  `
    ],
    [
        `__      __`,
        `\\ \\    / /`,
        ` \\ \\/\\/ / `,
        `  \\_/\\_/  `
    ],
    [
        `__  __`,
        `\\ \\/ /`,
        ` >  < `,
        `/_/\\_\\`
    ],
    [
        `__   __`,
        `\\ \\ / /`,
        ` \\ V / `,
        `  |_|  `
    ],
    [
        ` ____`,
        `|_  /`,
        ` / / `,
        `/___|`
    ],
    [
        ` __ `,
        `| _|`,
        `| | `,
        `| | `,
        `|__|`
    ],
    [
        `__   `,
        `\\ \\  `,
        ` \\ \\ `,
        `  \\_\\`
    ],
    [
        ` __ `,
        `|_ |`,
        ` | |`,
        ` | |`,
        `|__|`
    ],
    [
        ` /\\ `,
        `|/\\|`
    ],
    [
        ` ___ `,
        `|___|`
    ],
    [
        ` _ `,
        `( )`,
        ` \\|`
    ],
    [
        ` __ _ `,
        `/ _\` |`,
        `\\__,_|`
    ],
    [
        ` _    `,
        `| |__ `,
        `| '_ \\`,
        `|_.__|`
    ],
    [
        ` __ `,
        `/ _|`,
        `\\__|`
    ],
    [
        `    _ `,
        ` __| |`,
        `/ _\` |`,
        `\\__,_|`
    ],
    [
        ` ___ `,
        `/ -_)`,
        `\\___|`
    ],
    [
        `  __ `,
        ` / _|`,
        `|  _|`,
        `|_|  `
    ],
    [
        ` __ _ `,
        `/ _\` |`,
        `\\__, |`,
        `|___/ `
    ],
    [
        ` _    `,
        `| |_  `,
        `| ' \\ `,
        `|_||_|`
    ],
    [
        ` _ `,
        `(_)`,
        `| |`,
        `|_|`
    ],
    [
        `   _ `,
        `  (_)`,
        `  | |`,
        ` _/ |`,
        `|__/ `
    ],
    [
        ` _   `,
        `| |__`,
        `| / /`,
        `|_\\_\\`
    ],
    [
        ` _ `,
        `| |`,
        `| |`,
        `|_|`
    ],
    [
        ` _ __  `,
        `| '  \\ `,
        `|_|_|_|`
    ],
    [
        ` _ _  `,
        `| ' \\ `,
        `|_||_|`
    ],
    [
        ` ___ `,
        `/ _ \\`,
        `\\___/`
    ],
    [
        ` _ __ `,
        `| '_ \\`,
        `| .__/`,
        `|_|   `
    ],
    [
        ` __ _ `,
        `/ _\` |`,
        `\\__, |`,
        `   |_|`
    ],
    [
        ` _ _ `,
        `| '_|`,
        `|_|  `
    ],
    [
        ` ___`,
        `(_-<`,
        `/__/`
    ],
    [
        ` _   `,
        `| |_ `,
        `|  _|`,
        ` \\__|`
    ],
    [
        ` _  _ `,
        `| || |`,
        ` \\_,_|`
    ],
    [
        `__ __`,
        `\\ V /`,
        ` \\_/ `
    ],
    [
        `__ __ __`,
        `\\ V  V /`,
        ` \\_/\\_/ `
    ],
    [
        `__ __`,
        `\\ \\ /`,
        `/_\\_\\`
    ],
    [
        ` _  _ `,
        `| || |`,
        ` \\_, |`,
        ` |__/ `
    ],
    [
        ` ___`,
        `|_ /`,
        `/__|`
    ],
    [
        ` `,
        ` `,
        ` `,
        ` `,
    ],
    [
        ` _  `,
        `| | `,
        `|_| `,
        `(_) `,
    ],
    [
        `###`,
        `###`,
        `###`,
        `###`,

    ]
];

const getChar = (char) => {
    const code = char.charCodeAt(0);
    if (code >= 48 && code <= 57) {
        return smallFiGlet[code - 48];
    }
    else if (code >= 65 && code <= 90) {
        return smallFiGlet[code - 65 + 17];
    }
    else if (code >= 97 && code <= 122) {
        return smallFiGlet[code - 97 + 49];
    }
    
    else if (char == ':') {
        return smallFiGlet[10];
    }
    else if (char == ';') {
        return smallFiGlet[11];
    }
    else if (char == '(') {
        return smallFiGlet[12];
    }
    else if (char == ')') {
        return smallFiGlet[14];
    }
    else if (char == '?') {
        return smallFiGlet[15];
    }
    else if (char == '@') {
        return smallFiGlet[16];
    }
    else if (char == '[') {
        return smallFiGlet[43];
    }
    else if (char == '\\') {
        return smallFiGlet[44];
    }
    else if (char == ']') {
        return smallFiGlet[45];
    }
    else if (char == '^') {
        return smallFiGlet[46];
    }
    else if (char == '.') {
        return smallFiGlet[47];
    }
    else if (char == ',') {
        return smallFiGlet[48];
    }
    else if (char == '!') {
        return smallFiGlet[76];
    }
    else if (char == ' ') {
        return smallFiGlet[75];
    }
    else {
        return smallFiGlet[77];
    }
}
/*
    0-9: 0-9
    17-42: A-Z
    49-74: a-z
    10: :
    11: ;
    12: (
    14: )
    15: ?
    16: @
    43: [
    44: \
    45: ]
    46: ^
    47: .
    48: ,
    75: space
    76: !
    77: Not Found

*/

const mergeChars = (char1, char2) => {
    const merged = [];
    const height = Math.max(char1.length, char2.length);

    if (char1.length == 0) {
        return char2;
    }
    if (char2.length == 0) {
        return char1;
    }
    if (char1.length < height)
    {
        for (let i = char1.length; i < height; i++) {
            char1.unshift(" ".repeat(char1[0].length));
        }
    }
    if (char2.length < height) {
        for (let i = char2.length; i < height; i++) {
            char2.unshift(" ".repeat(char2[0].length));
        }
    }


    const f_width = char1[0].length;
    const s_width = char2[0].length;
    for (let i = 0; i <height; i++) {
        let line = char1[i] + char2[i];
        merged.push(line);
        
    }

    return merged;
};
let str = [];
let count = 0;
const print = (str) => {
    console.log(str.join('\n'));
};

const getIndex = (char) => {
  const charCode = char.charCodeAt(0);
   if (charCode >= 48 && charCode <= 57) {
        return charCode - 48;
    }
};



// for (const key in smallFiGlet) {
//     console.log(count + ": ")
//     print(smallFiGlet[key]);
//     count++;
// }

const getFiGlet = (str) => {
    const chars = str.split('');
    let merged = [[]];
    let currentLine = 0;
    for (let i = 0; i < chars.length; i++) {
        if (chars[i] == '\n') {
            currentLine++;
            merged[currentLine] = [];
            continue;
        }
        merged[currentLine] = mergeChars(merged[currentLine], getChar(chars[i]));
    }
    return merged.map((item) => item.join('\n')).join('\n');
};


const mergeFiGlet = (fig1, fig2) => {
    
    const fig1Lines = fig1.split('\n');
    const fig2Lines = fig2.split('\n');
    if (fig1Lines.length != fig2Lines.length) {
        let diff = fig1Lines.length - fig2Lines.length;
        while ( diff != 0)
        {
            if (diff > 0) {
                fig2Lines.unshift(' '.repeat(fig2Lines[0].length));
                diff--;
            }
            else {
                fig1Lines.unshift(' '.repeat(fig1Lines[0].length));
                diff++;
            }
        }
        return mergeFiGlet(fig2, fig1);
    }
    const maxLines = Math.max(fig1Lines.length, fig2Lines.length);

    const merged = [];
    for (let i = 0; i < maxLines; i++) {
        merged[i] = (fig1Lines[i] || '').padEnd(fig1Lines[0].length) + (fig2Lines[i] || '');
    }
    return merged.join('\n');
};

export {getFiGlet, mergeChars, mergeFiGlet};
